include:
  - project: 'gnome/citemplates'
    file: 'flatpak/flatpak-ci-initiative-sdk-extensions.yml'
    # ref: ''
  - component: "gitlab.gnome.org/GNOME/citemplates/basic-release@master"
  - project: 'gnome/citemplates'
    file: 'templates/default-rules.yml'

.flatpak-vars:
  variables:
    MANIFEST_PATH: "org.gnome.Podcasts.Devel.json"
    FLATPAK_MODULE: "gnome-podcasts"
    MESON_ARGS: "-Dprofile=development"
    APP_ID: "org.gnome.Podcasts.Devel"
    RUNTIME_REPO: "https://nightly.gnome.org/gnome-nightly.flatpakrepo"
    BUNDLE: "org.gnome.Podcasts.Devel.flatpak"

flatpak@x86_64:
  extends: [".flatpak@x86_64", ".flatpak-vars"]

flatpak@aarch64:
  extends: [".flatpak@aarch64", ".flatpak-vars"]

nightly@x86_64:
  extends: ".publish_nightly"
  needs: ["flatpak@x86_64"]

nightly@aarch64:
  extends: ".publish_nightly"
  needs: ["flatpak@aarch64"]

# Configure and run rustfmt
# Exits and builds fails if on bad format
rustfmt:
  image: "rust:slim"
  stage: ".pre"
  script:
    - rustup component add rustfmt
    - rustc -Vv && cargo -Vv
    - cargo fmt --version
    - cargo fmt --all -- --color=always --check
